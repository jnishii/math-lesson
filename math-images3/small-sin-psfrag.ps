%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.94a p1.6a1 Copyright 2004 ASCII Corp.(www-ptex@ascii.co.jp)
%%+ based on dvips(k) 5.94a Copyright 2003 Radical Eye Software (www.radicaleye.com)
%%Title: small-sin-psfrag.dvi
%%CreationDate: Wed May 31 22:09:56 2006
%%BoundingBox: 54 564 255 651
%%DocumentFonts: Times-Roman CMR10 CMMI10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -Ppdf -E small-sin-psfrag.dvi
%DVIPSParameters: dpi=8000, compressed
%DVIPSSource:  TeX output 2006.05.31:2207
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: texc.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File  8r.enc as of 2002-03-12 for PSNFSS 9
%
% This is the encoding vector for Type1 and TrueType fonts to be used
% with TeX.  This file is part of the PSNFSS bundle, version 9
% 
% Authors: S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry, W. Schmidt
%
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida + Euro.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (6) /Euro is assigned to 128, as in Windows ANSI
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /Euro /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: f7b6d320.enc 0 0
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmb10 cmbx10 cmbx12 cmbx5 cmbx6 cmbx7 cmbx8 cmbx9 cmbxsl10
%     cmdunh10 cmr10 cmr12 cmr17cmr6 cmr7 cmr8 cmr9 cmsl10 cmsl12 cmsl8
%     cmsl9 cmss10cmss12 cmss17 cmss8 cmss9 cmssbx10 cmssdc10 cmssi10
%     cmssi12 cmssi17 cmssi8cmssi9 cmssq8 cmssqi8 cmvtt10
%
/TeXf7b6d320Encoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute /caron /breve
/macron /ring /cedilla /germandbls /ae /oe /oslash /AE /OE /Oslash
/suppress /exclam /quotedblright /numbersign /dollar /percent /ampersand
/quoteright /parenleft /parenright /asterisk /plus /comma /hyphen
/period /slash /zero /one /two /three /four /five /six /seven /eight
/nine /colon /semicolon /exclamdown /equal /questiondown /question /at
/A /B /C /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X
/Y /Z /bracketleft /quotedblleft /bracketright /circumflex /dotaccent
/quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u
/v /w /x /y /z /endash /emdash /hungarumlaut /tilde /dieresis /suppress
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /space
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /.notdef
/.notdef /Omega /ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute
/caron /breve /macron /ring /cedilla /germandbls /ae /oe /oslash /AE
/OE /Oslash /suppress /dieresis /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: aae443f0.enc 0 0
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmmi10 cmmi12 cmmi5 cmmi6 cmmi7 cmmi8 cmmi9 cmmib10
%
/TeXaae443f0Encoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/alpha /beta /gamma /delta /epsilon1 /zeta /eta /theta /iota /kappa
/lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon /phi /chi /psi
/omega /epsilon /theta1 /pi1 /rho1 /sigma1 /phi1 /arrowlefttophalf
/arrowleftbothalf /arrowrighttophalf /arrowrightbothalf /arrowhookleft
/arrowhookright /triangleright /triangleleft /zerooldstyle /oneoldstyle
/twooldstyle /threeoldstyle /fouroldstyle /fiveoldstyle /sixoldstyle
/sevenoldstyle /eightoldstyle /nineoldstyle /period /comma /less /slash
/greater /star /partialdiff /A /B /C /D /E /F /G /H /I /J /K /L /M /N
/O /P /Q /R /S /T /U /V /W /X /Y /Z /flat /natural /sharp /slurbelow
/slurabove /lscript /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p
/q /r /s /t /u /v /w /x /y /z /dotlessi /dotlessj /weierstrass /vector
/tie /psi /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi
/.notdef /.notdef /Omega /alpha /beta /gamma /delta /epsilon1 /zeta /eta
/theta /iota /kappa /lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon
/phi /chi /psi /tie /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
/UniqueID 5087385 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
956017667094CD8DC214A666D7D12CB23EC030318B42CF6021E67CDF01BD0233
3270218FA370DAEB68B42017CF548BBBEC5C942A5F1D31E4F9C29278A0C609DC
D5F6C4D2BE78C6857CD16D30ADF8B4896EAD09F5C0BBF3370005ADFBD75CF53D
2EC56360C33FFD9AD64FCF5D520A9D50054C170AFF8A03D66B94EE3BC0747DE9
BE7A69F65636A740310E4310E85AE8D3015987BD7FA528298B0D9E7D5CCB52FD
62DFE7E2B6B4941CA2BF1F8B67D33B593B1530C334D1E038EF3B5A6176C3CD8C
8287DAAEBF0B0DB57957DC354B09312F047C12A5348116D7355263114214BF74
19E5A2554A0824D5A80F733847744B813D0AB4F9D6A9D21BD16392EF18958AD6
44239660971CDFF2D5891E16B1DA70C42002B0CF6AF3BA7B7D5C08BE8BA2C86E
F3CB2C2C2C83EB14E3FC818E046D2D92A79D5BE8A3D66ACAAE4C9900307C8567
BDDA7DDCEDDED92F1C7C49679D279F73DF0CFD56D07CC4958BC9CF9A06978FC8
17ADD4AF0C1499503714A7E6C71485CE059DF6D131B40B0343BA973675A17BE0
87B0A2EB3A955EDC75AAFEF0EA521E392E5689FCB4466EC95BD8942EB0292ADB
634A47F02133AC4E354167BA4F0D2AC561AC178D99830972CDAF86D0CBB609EF
140BF29910AAB5462D728E9252134E619701DC6709F9A01E35695EE810A8BD9A
2BBC727B9B5B11B27DB9E74D9136BC09530F8DD2717EA3C35E92D9B071B630BF
7BB796CA256874B766CE4972F7AC57BBE2D6268A570AC5B1D0C1D2ABF7FFBEDF
1EF2F6BD2AEF4C76BF862A92CCD84E67DCEA1EA7B7828F012526CE74567E5272
27590EBC03DDBAC9C9C0F39BD54211819377E32A8DE49651417DB57C16DB7E99
92DB94A261C21C3FC24E09F47BCD3C1628BC97C8F6841A75D9E2400ED05DC169
10AFD15D4C7F39632A5C0B9C272DCD54F09F24AF9B2DF98D9E92067F155FFFC8
7954DB0E949965CAAF6FB050F4020CFB31456FCD45BBB7A31989295701A3F738
46B244BB1C80BF00EDC0DAF1761696ED64055283E5C73793E7AAFA7F5444EB21
809AF697F78BBC5272847CC9F79B27621BA123D3FDEDCDBBF1762168D169E84A
F9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
/UniqueID 5000793 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEE09555C11E6E295
71B219B380EE9E5BB17AD84B4E8AED35880BD88E5AC7D9FE25C46889CD093396
F0E34A62F93E64C8E7975CFD617121244AB09FF9A4F73F8166197D0CDE2EEBB3
81AB9BD8329579C2122368F56DEB89BA6E42C5D9E20F2789CC4A89E4AD9B877F
8A0ACB84936F109D86211169257C19756A97E682601F4D1E7ED950A351C14DAC
4BEA7FB0E58FB5AEB55BC09B1253748B61B4E00C448F263458BF958D3986BF18
9636037E95FB425AAC96FCED5B4C766F93041FAA0DBB196B0A220B8E3A9FCA6E
B4F5C0C775C25AFF4F5099CD3A2FA59ACA735718F8E90B351B015320794A89E8
4C34F32B465E201008CCC0A15C2DEE572BDA14D8BDDFCF2743A15F8A93386861
828F6251F206B9131C951D1ED4364A9CCE507E2959A1DA04A777B592888D38ED
E68FFB3EFE83870BA8E04B88C9EEEB2DB80D4D07B52CE914D9DADF825A5301AC
C64063909D6C1DC84C274C90004F41A1FAFD450805C5DD2A8E4F4C23E114246F
C103EB63B58F33E44DD04F6367E04C3CBB3400BA3C1943B874CFB7DBF6A3EB5A
3F665C5A98F578A03948821E40D1608FB70C5915CA0DE369A0D7112BFF6CAE56
CB9BF699DAF3859F2B46DF97AE05915E791F1CE849154C53C4403EFD6F1A44EF
78C167190F3326BA35B2A0F95CD03492DBA2903489ABB6B2EB9F977F3F4D690B
31E8F6E32F83D91F721ABD116A40698F26610853E7FD075478979BEF42166C1B
312E8C20CB3F080B08A69416DA402D336C627BABC4737FC72F8F4F6BB7D73551
EE33D3CEA9052546399CE5FF4996968D1EF09B7C19995C083E727D2398021CAE
6B824B074160730AE1D61010FB6167E8AC42145BCE800A58D221004F6B953F48
B4A99CBF85F829F34F76B02D02D956F2D9710B38FE827FE961A3BA3E78F64ECD
DADF68975D97F94EA8A698A5C6C48DFFF960EE628E8515535F59220FCB5E7EBA
98EFC03380413965B0498C169ECE75E7981C6BFBD64D544B919570F297C004CE
0C3B1A7E5D3C322887DDB7AA315551E09616F5D1E4FF1E7506494F362B124790
B10F560A865E724D3FBD10BBBB8DB7B12BB1011EE8D3A91919C80165613FD4BC
C174D4FBD61DE7DDB8C216BA916D8FD9FD1DAAB8390CE43446595FBE4EAC1452
205295CBEBC5E65685CBF6F362C146A2D0C509DA71FED27E3D8D6259051819C0
BFC85D1A7A7495700F3AE9A074EE5B605950611393C2732176365ED9ED450AC4
9BBED391A2FB8AB67F939690953E5B84E9BF1331A8BB08918B940AAA4BA37ACB
5ED28FA1E9FCB1CE83942637B2A6BD6CF81FE18F87AFE2260E0B8526A71F16CE
5891AE408E0257C3ECF54CA123969E275792F7C38F63B9DD44BC5C4FE88EF799
F625F8C2536D3A9A11FF0EB43F9446B5F3D9F44558F919BBDCCE7BD6618567E1
CF2364EC65F4A9BE1D0999A43E86D8B0ED52FEC2EF1E25A0D50858C3B11CA3C7
88E6698B31669B30F827C7623CCD9389C2DA546635557B25513B290A5FDB500B
479CD31B02C29015F4CD5B2E01E215B0E51A012967FE9ACF5CCE197C92D6220B
38A94F261603F255E90DF726C181EEDD5044953413E44FE7531EAE1BE1D33036
667D9E810A3849E795B98487EAEB550C7EC416BD48D58934C8E83A75A57AE5E8
50641FB3F7ADB29A088647D04B7D2150B99C83A01B1D5FA108ECB8D4992852BC
17AC96C62049CB0442AC49F1C713F36FE6E664575D9985AE5D2EF32FCB911034
1AB3F34EC32B3FB6B1EE283B979F0AF53BD1E74F08FEA34C919AC32A323F1D61
2DF6AA4AB07182A6F7F726DBB83EBAC0FA47640CEE0069BBFF382AEFD997F56A
11BFBF232BFEAA12967F2EF474C74D0FEF7FD1A296E37C7C5892756100DC2EB7
CB4254C201DF076CC65435965EE50B9F56BDABFDA1D89BDFB9628E30023E6409
FF02EFED5FD59401BC33D9D5BD08BAF977720040870F82B0488918402844C9FF
304FFD1E53A9880D4FCAF990643323798D1EC310B32843EAFC06A3A083A34253
2595DE3141A36409650C3CB7864BFD6A64479FC93ADBC26F7FEC20BF031D8F7E
D6A469CB37B4E6586E2883EA94F154C8D08687C045867EB1DECB813561ED9D3D
B8D9B96AD80FF76865A790D69ABF7876E8BF5D3D9B8E76FC2F0F9063527BBF5A
85D24293E381DBF52659EF4DF5EE43CD717AE880E9B7C33D638770819DBD0324
D85D7FD555C0D88181DDB3BB40E65F12D257B146E140C243EAF4B8B9B7CA8872
47B2BD0642C468299218F7ED195C67EB9985EA8B48B10E27663523B4BB12BB84
ABF0C0B07AA52F90DB88B33AA522627D27186C1858EE6A4B373BE44666A559CD
3E5654CA842DF2CFD46C103A20D80CAC5CA670C1CD2AD8EEDF5DDD01E36F709C
B0A709F16D64ADAA77FBE184128C10276EC0DB6FF829B6855B582844ED4BF2CB
F63D317FD85C643619CE505AC6B77D03CB13AA234FFD2A510CC0464620284E5A
77B729FB3E08DDC7F89211434DC3E4E2360454ABF8DB067CF19C55F5CF2646C5
DD01E52BF5C4B649783E995C9E80B46F83D3DB2360F5B0FBCFE860D60573FE20
535139DCE7CF73BEB32A22BF94885803D76361478A5F64F10A56D985EB8A56D0
ECE448D03769503AD357108B8CAED151E91D0B9FA98AC5CA227D4F851A1FFDD4
10B09B05C1CD3B425C331F2DD7CADF4D7E9E6C6C0EFB1567A9E3DF8FD5ED450B
1EE8352D9153DC2D861612800CCB659AE1A3C1B89038E83EEA541C7E645DFEA2
58905F38D21D59AF9A79B7AC24D5029C6D9E281AE73F37560867D22F3C682932
5BB1385AE2A146F8E4B1CF4292248DBF05302C900628F4B359DBE583A2E23940
A34F76FBBBA42EE6D6AB951850B4F77866613D60560A68F8AC0D4B19F668306B
CCCA53A57CA700440E5A6FFA983F81F74AB0A838FC68891C237CF53ABBE04D8A
280B9C53C9E97699A1AF135C126D593484790683237A6F264A81156E6B54FBDD
52A87425576F699D966F996E3E96F97C223B84B6F661D6CF75D2B08FB1AF565C
6BEC40C2B9A97F39FDBEB04D18694D99385DC5DC68EE2580BD4CF11FF66D915D
D250354BE0477E21E81C58AB93C28F44B027995C8E83684AED23983A7F823459
38BC81CD8F7311DB9061E30B7009D31B26077E53FE0FC5B734DA5188239281EA
EBB14DC52EFFF940267E72FA272476278C7472DEBC43923CE53E310BD94FC433
6326822A07C34A3CE5CD6B76DFF2A311FE5873D8AD4DB4BCE386EC107FED9450
F1744A4A755064591E6A06EA0873F624908929738A82E72F810AFDC98A0BAB18
91794277B6F565E6BEA110A5A7D7FE40C3E86FBAC62B64629043575E8CA5E350
24898B72565250998A3080BE3A9DBAD26129A79CE561FCC32B6717EB6536A8D5
FBA1E578763569092274C30BB842645DA1DC372D0919ECFF61147CA2DABBEED0
DBCFC38827F4F9D711743908298D6B4D2447BBE721365D9072DD388F945E886D
5515C591A3552E2B0601AE62FE87E1756B7D1D55E7F1A4745BC7209A03F03B01
032CC558458A912349A593CCCA894074749CFAB82D7A7EF06477932DC85D9BB3
F70A17E41E506BF2958CBCF1C1AD4DDF22AFC5D4DF0E3400C9DA1D8465928DD7
F483C3CD1B79098B4AE02D537D8F0230BAC8BB207DBFF6E1B51FC3D3916DBFD5
0D15ED1FD2F86996FE8540367494CAD3C68EF0C8766722774CAC1CA7D728045B
DF7233C26B5EBAAD5C626301ED77AB1CABBEFDA77838DED438B509175E09E73D
5F7CCE94C251B4288DBC526523035B29EAC33708305A2613AB09348C7168ADC0
4A207E1F5DE9804E44729F69FB292F96F1B987D53D9213EE469B6EA42A8F57D2
51E236118B8519A907705BDA5731A1EB49A9ED60AC20DD851A94F786B9AB9F9E
0069F23E25106D0D7A77D72A6B46FE2EAFA4142536A3F4AE8B9815CBBED09554
7A26A83210940239FBCC672673CEDBFCB81E408DCEC73B2628EA31AA05C993D0
E02DA1365AEF36C266815A8FFEC8B950EAE468C6D6E0A41487FCAE1EE016F7D1
CB1DB145ECDDEFF7E494C4961B2EF98C60CD3299C0072AB5C29EB496B6A2219E
729943D3E52A51248F865F13B1BC472D0DFB35A6534C83931E6FF0C5B884D30E
303F9B2D4D1C685E293E9D70ADB227C7FD08471A9D0C6A431C25176BEA9DAAAC
BD74E7341D2B0E45D9A5FE1378994D4041A06072305BB144B1790ED353D92361
1311AECF63DBD56A4759D3A54CAC30013C84E746AD2A68E5FA4305203DF22A6A
C7D5526BBD1F3FC7C3D04BBE16C17457BCB21E325683B022DE33261FC2546687
9EFF97CD92C667BC65823D304AF18D6928BA4A4265EBD3C430FFB57C798D4B55
EDA8A804462805B3885F171FD84FC8404D00ED57420718480BC9595CF7F5F6A2
4D21FF21925A199141055DCD8C8C9B80BF43ED9D8D7E3ABF285E130ADEEFEF47
9A745C37793B2905FC53DC0E4A22119951B0218EB3926878E087D1CB48196CF8
0C12A24503010C1A7D90E4F461F28CC88B0F1C054913B11D80F63AD218EEC599
396FF8ED0D2B38E06B4ABA1E1D07BB152CAAB88204E57C1C748F616ADF1E7FC5
C372503A8FB3E124DD89FC5C4C1E91335C069B6209E5E98E9E45B865E6C5ECB4
8E97BC21294D62BC2E16EF04703E9FDC23887F65A421563502C32844C31A3B99
CBFCB884708BC2603AD0E2B68AA6942A45CDD881C2B02E0FFB7A721DA9A7221C
C78717633656F8F2ACF0E53C69632173397AD5584FB5CD1D3A296571825105DA
5352FBFEB90FB82B748B1250794B706C2559E7D67C3008CECCEFA59A2CDFEE1B
F40DD5C874118B1A40F238EACDE20D6BF216D6F727917EE6BC8324C3F1BEB039
A3ACBEDD640961DBFFF3937B6228B1E241499C62588074B2553FE60D5E10DEF2
F6B5EEA7C59A9BDD24A55343923CAB8A926FF20E43C8705F25B13EED77E82CD1
402D5F4BBD7DDFE8036435EA267AD5F87D593FEEA34E0B2F849C3C095182B1DB
B18048C20DA59CD2B626B70933C9869724588C8B6A7DD9334795DCA0FA2FB554
A0595D460A1D35AEEBE3D54137AA8F5D3A2B167C280FFA715D523436D1E29926
8A16F8FE07AAAE86624C3DA7BFE16E86114D838DA7D1EFB12C5C732772D08CA9
383D06BB7B11149A1750E2512F011E4E49C1D63389886D995A7495BF1814ACAE
EE66981A8574ABDAE6A9B86FE446448ADA6B7DDFF992C7C4AB9313E4478AC68D
AFABF67CB2358FDE0351386C283001937B6F8C23C546C6C507A36FCDFBD17B73
7818CF215DB2945BE25106945718B23807558CA48FC835EA59371ED733B9C85E
7784FCA7919126A3F0697932C14CD6F9C4DECEBED28FE960F1303B6A90876453
7E3A61B5FD777B538E95843B439C64D621F28EEF792E8949AFCD3CDF33F49E74
36DF1AAD363354E7489FF4ACD66E369D43EC5454BE8C45E85D8844B52F72DBAA
370425D374266A02EFF7027A9DCE91C8B0BF456DA759E0228C89CE9C6A659E97
5986D5619610EE086A39478AE985F33D171A7E3F7403290C61D5A5D0A4F8DFB0
CECBB1CD8BD7A7D937C94B109BBB8613F54AECECAD4A3B2E6637175D4C83D9A7
B52620590654908790BCDE5473E8A7BA205EE93208FCCB62BE97FC90A576
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099154 1000 8000 8000 (small-sin-psfrag.dvi)
@start /Fa 134[ 543 633 101[ 520 18[{  TeXaae443f0Encoding ReEncodeFont 
} 3 1106.96 /CMMI10 rf /Fb 139[ 430 437 434 1[ 615 1[ 615
922 307 4[ 553 338 492 615 492 1[ 553 3[ 307 1[ 307 7[ 615
2[ 753 30[ 553 49[{  TeXf7b6d320Encoding ReEncodeFont } 18
1106.96 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop 7928 17235 a
 currentpoint currentpoint translate 1.27698 1.27698 scale neg exch
neg exch translate
 7928 17235 a 7928
17235 a
 /PSfrag where{pop(s)[[0()1 0]](srad)[[1()1 0]](1)[[2()1 0]](x)[[3()1
0]](y)[[4()1 0]]5 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 7928 17235 a @beginspecial 72 @llx 739 @lly 183
@urx 816 @ury 1110 @rwi @setspecial
%%BeginDocument: small-sin.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 72 739 183 816
%%Title: small-sin
%%CreationDate: Tue Apr 18 13:09:20 2006
%%Creator: Tgif-4.1.43 written by William Chia-Wei Cheng (bill.cheng@acm.org)
%%ProducedBy: (unknown)
%%Pages: 1
%%DocumentFonts: (atend)
%%DocumentPaperSizes: a4
%%EndComments
%%BeginProlog

/tgifdict 56 dict def
tgifdict begin

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/TGAT % tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/TGAN % tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/TGAR % tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/TGMAX
 { exch dup 3 1 roll exch dup 3 1 roll gt { pop } { exch pop } ifelse
 } def
/TGMIN
 { exch dup 3 1 roll exch dup 3 1 roll lt { pop } { exch pop } ifelse
 } def
/TGSW { stringwidth pop } def

/bd { bind def } bind def

/GS { gsave } bd
/GR { grestore } bd
/NP { newpath } bd
/CP { closepath } bd
/CHP { charpath } bd
/CT { curveto } bd
/L { lineto } bd
/RL { rlineto } bd
/M { moveto } bd
/RM { rmoveto } bd
/S { stroke } bd
/F { fill } bd
/TR { translate } bd
/RO { rotate } bd
/SC { scale } bd
/MU { mul } bd
/DI { div } bd
/DU { dup } bd
/NE { neg } bd
/AD { add } bd
/SU { sub } bd
/PO { pop } bd
/EX { exch } bd
/CO { concat } bd
/CL { clip } bd
/EC { eoclip } bd
/EF { eofill } bd
/IM { image } bd
/IMM { imagemask } bd
/ARY { array } bd
/SG { setgray } bd
/RG { setrgbcolor } bd
/SD { setdash } bd
/W { setlinewidth } bd
/SM { setmiterlimit } bd
/SLC { setlinecap } bd
/SLJ { setlinejoin } bd
/SH { show } bd
/FF { findfont } bd
/MS { makefont setfont } bd
/AR { arcto 4 {pop} repeat } bd
/CURP { currentpoint } bd
/FLAT { flattenpath strokepath clip newpath } bd
/TGSM { tgiforigctm setmatrix } def
/TGRM { savematrix setmatrix } def

end

%%EndProlog
%%BeginSetup
%%PaperSize: a4
%%BeginPaperSize: a4
%%EndPaperSize
%%EndSetup
%%Page: 1 1

%%PageBoundingBox: 72 739 183 816
tgifdict begin
/tgifsavedpage save def

1 SM
1 W

0 SG

72 0 MU 72 11.602 MU TR
72 128 DI 100.000 MU 100 DI DU NE SC

GS

/tgiforigctm matrix currentmatrix def

% ARC
0 SG
GS
   GS
      NP
         150 150 150 150 0 -14 TGAR
      2 W
      S
   GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      150 150 M
      300 150 L
   TGSM
   2 W
   S
   1 W
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      150 150 M
      295 115 L
      295 150 L
   TGSM
   2 W
   S
   1 W
GR

% ARC
0 SG
GS
   GS
      NP
         146 150 67 76 -12 0 TGAN
      S
   GR
GR

% ARC
0 SG
GS
   GS
      NP
         250 240 135 135 -138 -70 TGAN
      S
   GR
GR

% BOX
1 SG
NP 205 95 M 235 95 L 235 120 L 205 120 L CP 1 SG F
   1 SG
GS
   10 SM
   GS
      NP 205 95 M 235 95 L 235 120 L 205 120 L CP
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      215 110 M
      GS
            0 SG
            /Times-Roman FF [15 0 0 -15 0 0] MS
            (1) SH
      GR
   GR

% ARC
0 SG
GS
   GS
      NP
         292 133 16 19 -75 56 TGAN
      S
   GR
GR

% BOX
1 SG
NP 303 123 M 312 123 L 312 140 L 303 140 L CP 1 SG F
   1 SG
GS
   10 SM
   GS
      NP 303 123 M 312 123 L 312 140 L 303 140 L CP
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      305 136 M
      GS
            0 SG
            /Times-Roman FF [15 0 0 -15 0 0] MS
            (s) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      232 146 M
      GS
            0 SG
            /Times-Roman FF [15 0 0 -15 0 0] MS
            (srad) SH
      GR
   GR

% ARC
0 SG
GS
   GS
      NP
         308 132 22 22 -129 -236 TGAR
      S
   GR
GR

% BOX
1 SG
NP 282 124 M 291 124 L 291 141 L 282 141 L CP 1 SG F
   1 SG
GS
   10 SM
   GS
      NP 282 124 M 291 124 L 291 141 L 282 141 L CP
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      284 134 M
      GS
            0 SG
            /Times-Roman FF [15 0 0 -15 0 0] MS
            (y) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      130 150 M
      0 194 atan DU cos 8.000 MU 324 exch SU
      exch sin 8.000 MU 150 exch SU L
   TGSM
   1 W
   S
GR
GS
   TGSM
   NP
      324 150 8.000 3.000 194 0 TGAT
   1 SG CP F
   0 SG
   NP
      324 150 8.000 3.000 194 0 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      150 166 M
      -129 0 atan DU cos 8.000 MU 150 exch SU
      exch sin 8.000 MU 37 exch SU L
   TGSM
   1 W
   S
GR
GS
   TGSM
   NP
      150 37 8.000 3.000 0 -129 TGAT
   1 SG CP F
   0 SG
   NP
      150 37 8.000 3.000 0 -129 TGAT
   CP F
GR

% TEXT
NP
0 SG
   GS
      1 W
      135 165 M
      GS
            0 SG
            /Times-Roman FF [15 0 0 -15 0 0] MS
            (O) SH
      GR
   GR

% ARC
0 SG
GS
   GS
      NP
         150 150 150 150 0 -49 TGAR
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      310 160 M
      GS
            0 SG
            /Times-Roman FF [15 0 0 -15 0 0] MS
            (x) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      135 50 M
      GS
            0 SG
            /Times-Roman FF [15 0 0 -15 0 0] MS
            (y) SH
      GR
   GR

GR
tgifsavedpage restore
end
showpage

%%Trailer
%MatchingCreationDate: Tue Apr 18 13:09:20 2006
%%DocumentFonts: Times-Roman
%%EOF

%%EndDocument
@endspecial 7928 17235 a
 /End PSfrag
 7928 17235 a 7928 7727 a
 /Hide PSfrag
 7928
7727 a Fb -1939 8496 a(PSfrag) 370 b(replacemen) -31
b(ts) p -1939 8888 9868 45 v 7928 8933 a
 /Unhide PSfrag
 7928 8933 a
7653 10209 a
  {
 7653 10209 a Fa 7378 10593 a(\265) 7653
10209 y
  } 0/Place PSfrag
 7653 10209 a 6360 11700 a
  {
 6360 11700 a Fa 4792
11977 a(\265) p Fb 399 w([rad]) 6360 11700 y
  } 1/Place PSfrag
 6360 11700
a 7651 13557 a
  {
 7651 13557 a Fb 7374 13914 a(1) 7651 13557
y
  } 2/Place PSfrag
 7651 13557 a 7612 15336 a
  {
 7612 15336 a Fa 7296 15574
a(x) 7612 15336 y
  } 3/Place PSfrag
 7612 15336 a 7637 16889 a
  {
 7637 16889
a Fa 7346 17020 a(y) 7637 16889 y
  } 4/Place PSfrag
 7637 16889 a 7928 17235
a
 currentpoint currentpoint translate 1 1.27698 div 1 1.27698 div scale
neg exch neg exch translate
 7928 17235 a dyy eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
